/* You can add global styles to this file, and also import other style files */
@use '@angular/material' as mat;

html {
    & {
        color-scheme: dark;
        height: 100%;
    }

    @include mat.theme((
        color: mat.$cyan-palette,
        typography: Roboto,
        density: 0
    ));
}

body {
    height: 100%;
    background: var(--mat-sys-surface);
    color: var(--mat-sys-on-surface);
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Override styles
:root {
    @include mat.toolbar-overrides((
        container-background-color: var(--mat-sys-primary-container),
    ));
    @include mat.button-toggle-overrides((
        selected-state-background-color: var(--mat-sys-tertiary),
        selected-state-text-color: #222,
    ));
    @include mat.dialog-overrides((
        container-color: #333,
    ));
}

// mat-list
.sel-option span.mat-mdc-list-item-title.mdc-list-item__primary-text {
    margin-bottom: -25px !important;
}

.sel-option.mdc-list-item--with-trailing-checkbox .mdc-list-item__end {
    margin-left: 10px !important;
}

.sel-option.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before {
    height: 23px !important;
}

.mat-button-toggle-appearance-standard.toggler .mat-button-toggle-label-content {
    line-height: 20px !important;
}


.dialog-close-btn {
    float: right;
    top: 10px;
    right: 10px;
}

.margin-bottom-20 {
    margin-bottom: 20px !important;
}

.capital {
    text-transform: capitalize;
}

.hand {
    cursor: pointer;
}

/* TIPPY CUSTOM THEME */
.tippy-box[data-theme~='tippy-dark'] {
    background-color: rgba(51, 51, 51, .8);
    border: 1px solid rgba(68, 68, 68, .8);
}

.tippy-box[data-theme~='tippy-dark'] > .tippy-arrow {
    width: 14px;
    height: 14px;
}

.tippy-box[data-theme~='tippy-dark'][data-placement^=top] > .tippy-arrow:before {
    border-width: 7px 7px 0;
    border-top-color: rgba(68, 68, 68, .8);
}

.tippy-box[data-theme~='tippy-dark'][data-placement^=bottom] > .tippy-arrow:before {
    border-width: 0 7px 7px;
    border-bottom-color: rgba(68, 68, 68, .8);
}

.tippy-box[data-theme~='tippy-dark'][data-placement^=left] > .tippy-arrow:before {
    border-width: 7px 0 7px 7px;
    border-left-color: rgba(68, 68, 68, .8);
}

.tippy-box[data-theme~='tippy-dark'][data-placement^=right] > .tippy-arrow:before {
    border-width: 7px 7px 7px 0;
    border-right-color: rgba(68, 68, 68, .8);
}

.tippy-box[data-theme~='tippy-dark'] > .tippy-backdrop {
    background-color: rgba(68, 68, 68, .8);
}

.tippy-box[data-theme~='tippy-dark'] > .tippy-svg-arrow {
    fill: rgba(68, 68, 68, .8);
}

.tip p {
    margin: 0 0 5px 0;
}

.tip p strong {
    font-size: 1.1em;
}

.tip p em {
    color: #c3c3c3;
    font-size: 0.9em;
}

.tip ul {
    padding-left: 20px;
    margin: 0 0 5px 0;
}

.tip span.status-ok {
    color: #4fc354;
}

.tip span.status-fail {
    color: #ec3e3e;
}

/* JSON VIEWER */
.json {
    font-family: 'Source Code Pro', monospace;
    font-size: 16px;

    & > {
        .json__item {
            display: block;
        }
    }
}

.json__item {
    display: block;
    margin-top: 10px;
    padding-left: 20px;
    user-select: none;
}

.json__item--collapsible {
    overflow: hidden;
    position: relative;

    &::before {
        content: '‚åê';
        position: absolute;
        left: 5px;
    }

    &::after {
        background-color: lightgrey;
        content: '';
        height: 100%;
        left: 9px;
        position: absolute;
        top: 26px;
        width: 1px;
    }
}

.json__key {
    color: #F5F5F5;
    display: inline;

    &::after {
        content: ': ';
    }
}

.json__value {
    display: inline;
}

.json__value--string {
    color: #5dea5d;
}

.json__value--number {
    color: #76c5ef;
}

.json__value--boolean {
    color: #d67878;
}

.json__value--type-object {
    color: #555555;
}
